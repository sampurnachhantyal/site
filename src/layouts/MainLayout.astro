---
interface Props {
  title?: string;
  description?: string;
  image?: string;
}
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../constants";
const {
  title = "Empowering Innovation in IT Solutions",
  description = "Threadcode Technologies",
  image = "/images/threadcode-tech-logo.png",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={SITE_DESCRIPTION}>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:image" content={image} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.0/flowbite.js"
      integrity="sha512-BJ/5sR2hFxQTKin/55JQCcMTObShDBAmVjL/3NR/MVcrhyOazJjAgvROem03+HYyGw16SVdSfoWCFGr9syxAKA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"></script>
    <title>{SITE_TITLE} - {title}</title>
    <script>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </head>
  <body class="min-h-screen">
    <Navbar />
    <slot />
    <Footer />
  </body>
</html>
<style is:global>
  :root {
    --logo-color: #2a579a;
  }
  * {
    font-family: "Poppins", sans-serif;
  }
  html {
    scroll-behavior: smooth;
  }
  body {
    /* background-color: #FFFFF0; */
    background-color: #f7f9ff;
    scroll-behavior: smooth;
    /* background-color: #E5F0FF; */
  }
  .bg-offblue {
    background-color: #f7f9ff;
  }
  .bg-threadcode-color {
    background-color: var(--logo-color);
  }
  .text-logo-color {
    color: var(--logo-color);
  }
  .sub-heading {
    font-weight: 600;
    font-size: 20px;
    line-height: 28px;
    /* identical to box height, or 138% */
    letter-spacing: 0.1em;
    color: var(--logo-color);
    text-transform: uppercase;
  }
  .h-22 {
	height: 5.5rem;
  }
  .sm\:h-22 {
	height: 5.5rem;
  }
</style>
<script>
  let themeToggleDarkIcon: HTMLElement | null = document.getElementById("theme-toggle-dark-icon");
  let themeToggleLightIcon: HTMLElement | null = document.getElementById("theme-toggle-light-icon");

  // Change the icons inside the button based on previous settings
  if (
    localStorage.getItem("color-theme") === "dark" ||
    (!("color-theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    themeToggleLightIcon!.classList.remove("hidden");
  } else {
    themeToggleDarkIcon!.classList.remove("hidden");
  }

  var themeToggleBtn = document.getElementById("theme-toggle");

  themeToggleBtn!.addEventListener("click", function () {
    // toggle icons inside button
    themeToggleDarkIcon!.classList.toggle("hidden");
    themeToggleLightIcon!.classList.toggle("hidden");

    // if set via local storage previously
    if (localStorage.getItem("color-theme")) {
      if (localStorage.getItem("color-theme") === "light") {
        document.documentElement.classList.add("dark");
        localStorage.setItem("color-theme", "dark");
      } else {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("color-theme", "light");
      }

      // if NOT set via local storage previously
    } else {
      if (document.documentElement.classList.contains("dark")) {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("color-theme", "light");
      } else {
        document.documentElement.classList.add("dark");
        localStorage.setItem("color-theme", "dark");
      }
    }
  });
</script>
